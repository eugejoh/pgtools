% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_sql_create.R
\name{get_sql_create}
\alias{get_sql_create}
\title{Generate SQL to CREATE TABLE}
\usage{
get_sql_create(pg_fields, schema = "public", pkey = NULL,
  tbl_name = NULL, export = FALSE, path = NULL, ...)
}
\arguments{
\item{pg_fields}{a named \code{character} vector or a named \code{list} of named \code{character} vectors}

\item{schema}{an optional argument to specify the desired schema for \code{CREATE TABLE}}

\item{pkey}{a \code{character} string specifying the primary for the Postgres (PRIMARY KEY and CONSTRAINT)}

\item{tbl_name}{a require option if \code{nchar_df} argument is a \code{data.frame}}

\item{export}{a \code{logical} option export the result as an binary file}

\item{path}{a \code{file path} option to specify the write location of the binary file}

\item{...}{other arguments passed to \code{\link{glue_sql}()}}
}
\value{
results in a SQL statement to \code{CREATE TABLE}. See \code{DBI::SQL}
}
\description{
This function uses the output from \code{nchar_df()} to generate a SQL \code{CREATE TABLE} statement
that can be used to create the skeleton table in Postgres. The result can be copied and pasted for use.
}
\details{
NOTE: \code{\link{write_pg}()} does not use the SQL statement to write to PostgreSQL, but solely uses the result
from \code{set_pgfields()}
}
\examples{
\dontrun{
nchar_df <- get_nchar(iris)

my_pgfields <- set_pgfields(nchar_df, conn = local_con_test)

get_sql_create(my_pg_fields, pkey = "Species", tbl_name = "iris")
}
}
